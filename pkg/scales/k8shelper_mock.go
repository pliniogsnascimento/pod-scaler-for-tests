// Code generated by MockGen. DO NOT EDIT.
// Source: ./k8sHelper.go

// Package scales is a generated GoMock package.
package scales

import (
	reflect "reflect"
	time "time"

	gomock "github.com/golang/mock/gomock"
	v1 "k8s.io/api/apps/v1"
	v10 "k8s.io/api/autoscaling/v1"
)

// Mockk8sHelperInterface is a mock of k8sHelperInterface interface.
type Mockk8sHelperInterface struct {
	ctrl     *gomock.Controller
	recorder *Mockk8sHelperInterfaceMockRecorder
}

// Mockk8sHelperInterfaceMockRecorder is the mock recorder for Mockk8sHelperInterface.
type Mockk8sHelperInterfaceMockRecorder struct {
	mock *Mockk8sHelperInterface
}

// NewMockk8sHelperInterface creates a new mock instance.
func NewMockk8sHelperInterface(ctrl *gomock.Controller) *Mockk8sHelperInterface {
	mock := &Mockk8sHelperInterface{ctrl: ctrl}
	mock.recorder = &Mockk8sHelperInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *Mockk8sHelperInterface) EXPECT() *Mockk8sHelperInterfaceMockRecorder {
	return m.recorder
}

// getDeploymentWithTimeout mocks base method.
func (m *Mockk8sHelperInterface) getDeploymentWithTimeout(deployName string, timeout time.Duration) (*v1.Deployment, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "getDeploymentWithTimeout", deployName, timeout)
	ret0, _ := ret[0].(*v1.Deployment)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// getDeploymentWithTimeout indicates an expected call of getDeploymentWithTimeout.
func (mr *Mockk8sHelperInterfaceMockRecorder) getDeploymentWithTimeout(deployName, timeout interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "getDeploymentWithTimeout", reflect.TypeOf((*Mockk8sHelperInterface)(nil).getDeploymentWithTimeout), deployName, timeout)
}

// getHpaWithTimeout mocks base method.
func (m *Mockk8sHelperInterface) getHpaWithTimeout(name string, timeout time.Duration) (*v10.HorizontalPodAutoscaler, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "getHpaWithTimeout", name, timeout)
	ret0, _ := ret[0].(*v10.HorizontalPodAutoscaler)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// getHpaWithTimeout indicates an expected call of getHpaWithTimeout.
func (mr *Mockk8sHelperInterfaceMockRecorder) getHpaWithTimeout(name, timeout interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "getHpaWithTimeout", reflect.TypeOf((*Mockk8sHelperInterface)(nil).getHpaWithTimeout), name, timeout)
}

// updateDeployWithTimeout mocks base method.
func (m *Mockk8sHelperInterface) updateDeployWithTimeout(name string, deployConfig *v1.Deployment, timeout time.Duration) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "updateDeployWithTimeout", name, deployConfig, timeout)
	ret0, _ := ret[0].(error)
	return ret0
}

// updateDeployWithTimeout indicates an expected call of updateDeployWithTimeout.
func (mr *Mockk8sHelperInterfaceMockRecorder) updateDeployWithTimeout(name, deployConfig, timeout interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "updateDeployWithTimeout", reflect.TypeOf((*Mockk8sHelperInterface)(nil).updateDeployWithTimeout), name, deployConfig, timeout)
}

// updateHpaWithTimeout mocks base method.
func (m *Mockk8sHelperInterface) updateHpaWithTimeout(name string, hpaConfig *v10.HorizontalPodAutoscaler, timeout time.Duration) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "updateHpaWithTimeout", name, hpaConfig, timeout)
	ret0, _ := ret[0].(error)
	return ret0
}

// updateHpaWithTimeout indicates an expected call of updateHpaWithTimeout.
func (mr *Mockk8sHelperInterfaceMockRecorder) updateHpaWithTimeout(name, hpaConfig, timeout interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "updateHpaWithTimeout", reflect.TypeOf((*Mockk8sHelperInterface)(nil).updateHpaWithTimeout), name, hpaConfig, timeout)
}
